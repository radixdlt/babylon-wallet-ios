name: CI

on:
  pull_request:
    types:
      - ready_for_review
      - synchronize
      - opened
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:

  linting:
    name: "Linting"
    if: >
      ( github.event.action == 'opened' && github.event.pull_request.draft == false ) ||
      ( github.event.pull_request.draft == false && github.event.action == 'synchronize' ) ||
      ( github.event.action == 'ready_for_review' ) ||
      ( github.event_name == 'push' && github.ref == 'refs/heads/main' )
    runs-on: macos-15-xlarge

    steps:
      - uses: RDXWorks-actions/checkout@main

      - name: "Run Lint"
        run: |
          brew update
          brew upgrade swiftformat
          swiftformat . --lint

  unit_test:
    if: >
      ( github.event.action == 'opened' && github.event.pull_request.draft == false ) ||
      ( github.event.pull_request.draft == false && github.event.action == 'synchronize' ) || 
      ( github.event.action == 'ready_for_review' ) ||
      ( github.event_name == 'push' && github.ref == 'refs/heads/main' )
    permissions:
      id-token: write
      contents: read
      checks: write
    name: "Unit test"
    runs-on: macos-15-xlarge
    timeout-minutes: 20

    needs:
      - linting

    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Configure AWS credentials to fetch secrets
        uses: RDXWorks-actions/configure-aws-credentials@main
        with:
          role-to-assume: ${{ secrets.GH_WALLET_SECRET_ACCESS }}
          aws-region: "eu-west-2"
          role-session-name: 'babylon-wallet-ios-${{ github.run_id }}-${{ github.run_attempt }}'
      - name: Fetch AWS secrets
        uses: RDXWorks-actions/aws-secretsmanager-get-secrets@main
        with:
          secret-ids: |
            WALLET, ${{ secrets.AWS_SECRET_NAME_WALLET }}
          parse-json-secrets: true
      - name: Fetch AWS secrets
        uses: RDXWorks-actions/aws-secretsmanager-get-secrets@main
        with:
          secret-ids: |
            SWIFT_ENGINE_TOOLKIT_SSH_KEY, ${{ secrets.AWS_SECRET_NAME_WALLET_SWIFT_SSH }}
          parse-json-secrets: true
      - name: Fetch AWS secrets
        uses: RDXWorks-actions/aws-secretsmanager-get-secrets@main
        with:
          secret-ids: |
            FASTLANE_MATCH_REPO_SSH_KEY, ${{ secrets.AWS_SECRET_NAME_WALLET_FASTLANE_SSH }}
          parse-json-secrets: true
      - uses: RDXWorks-actions/ssh-agent@master
        with:
          ssh-private-key: |
            ${{ env.SWIFT_ENGINE_TOOLKIT_SSH_KEY }}
            ${{ env.FASTLANE_MATCH_REPO_SSH_KEY }}

      - uses: RDXWorks-actions/setup-xcode@master
        with:
          xcode-version: "16.0.0"

      - name: "Set up ruby"
        uses: RDXWorks-actions/setup-ruby@master
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - name: "Install additional deps"
        run: |
          echo "${{ env.WALLET_FASTLANE_SECRETS_BASE64 }}" | base64 --decode > fastlane/.env.secret
          brew install xcbeautify

      - name: "Unit tests"
        run: |
          defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
          bundle exec fastlane tests

      - name: Upload results
        uses: RDXWorks-actions/xcresulttool-xcode16@v1.8.0
        with:
          path: build/test_output/results.xcresult
          show-passed-tests: false
          show-code-coverage: true
        if: success() || failure()


  # snapshot_tests:
  #   name: "Snapshot tests"
  #   runs-on: macos-12

  #   needs:
  #     - assertFormated

  #   steps:
  #     - uses: RDXWorks-actions/checkout@main

  #     - name: "Run snapshot tests"
  #       run: echo "Runing snapshot tests" # JUST A PLACEHOLDER, NEEDS TO BE REPLACED

  # ui_tests:
  #   name: "UI tests"
  #   runs-on: macos-12

  #   needs:
  #     - assertFormated

  #   steps:
  #     - uses: RDXWorks-actions/checkout@main

  #     - name: "Run UI tests"
  #       run: echo "Runing UI tests" # JUST A PLACEHOLDER, NEEDS TO BE REPLACED
