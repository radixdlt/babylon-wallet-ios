//
// NonFungibleSubstate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

// MARK: - NonFungibleSubstate
public struct NonFungibleSubstate: Codable, Hashable {
	public private(set) var entityType: EntityType
	public private(set) var substateType: SubstateType
	/** The hex-encoded bytes of its non-fungible id */
	public private(set) var nfIdHex: String
	public private(set) var isDeleted: Bool
	public private(set) var nonFungibleData: NonFungibleData?

	public init(entityType: EntityType, substateType: SubstateType, nfIdHex: String, isDeleted: Bool, nonFungibleData: NonFungibleData? = nil) {
		self.entityType = entityType
		self.substateType = substateType
		self.nfIdHex = nfIdHex
		self.isDeleted = isDeleted
		self.nonFungibleData = nonFungibleData
	}

	public enum CodingKeys: String, CodingKey, CaseIterable {
		case entityType = "entity_type"
		case substateType = "substate_type"
		case nfIdHex = "nf_id_hex"
		case isDeleted = "is_deleted"
		case nonFungibleData = "non_fungible_data"
	}

	// Encodable protocol methods

	public func encode(to encoder: Encoder) throws {
		var container = encoder.container(keyedBy: CodingKeys.self)
		try container.encode(entityType, forKey: .entityType)
		try container.encode(substateType, forKey: .substateType)
		try container.encode(nfIdHex, forKey: .nfIdHex)
		try container.encode(isDeleted, forKey: .isDeleted)
		try container.encodeIfPresent(nonFungibleData, forKey: .nonFungibleData)
	}
}
