//
// NetworkConfigurationResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

// MARK: - NetworkConfigurationResponse
public struct NetworkConfigurationResponse: Codable, Hashable {
	public private(set) var version: NetworkConfigurationResponseVersion
	/** The logical name of the network */
	public private(set) var network: String
	/** The network suffix used for Bech32m HRPs used for addressing. */
	public private(set) var networkHrpSuffix: String
	public private(set) var wellKnownAddresses: NetworkConfigurationResponseWellKnownAddresses

	public init(version: NetworkConfigurationResponseVersion, network: String, networkHrpSuffix: String, wellKnownAddresses: NetworkConfigurationResponseWellKnownAddresses) {
		self.version = version
		self.network = network
		self.networkHrpSuffix = networkHrpSuffix
		self.wellKnownAddresses = wellKnownAddresses
	}

	public enum CodingKeys: String, CodingKey, CaseIterable {
		case version
		case network
		case networkHrpSuffix = "network_hrp_suffix"
		case wellKnownAddresses = "well_known_addresses"
	}

	// Encodable protocol methods

	public func encode(to encoder: Encoder) throws {
		var container = encoder.container(keyedBy: CodingKeys.self)
		try container.encode(version, forKey: .version)
		try container.encode(network, forKey: .network)
		try container.encode(networkHrpSuffix, forKey: .networkHrpSuffix)
		try container.encode(wellKnownAddresses, forKey: .wellKnownAddresses)
	}
}
