openapi: 3.0.0
info:
  version: 2.0.0
  title: Radix Babylon Gateway API
  license:
    name: The Radix License, Version 1.0
    url: https://www.radixfoundation.org/licenses/LICENSE-v1
  description: |
    See https://docs.radixdlt.com/main/apis/introduction.html
servers:
  - url: http://localhost:5208
  - url: https://stokenet.radixdlt.com
  - url: https://mainnet.radixdlt.com
tags:
  - name: Status
    description: Query information about the Gateway API status.
  - name: Transaction
    description: Preview and submit transactions, and query transaction status and contents.
  - name: Entity
    description: TBD
  - name: Non-Fungible
    description: TBD
paths:

  #
  # /gateway/* Requests & Responses
  #

  "/gateway/information":
    post:
      operationId: GatewayInformation
      summary: Get Gateway Information
      description: Returns the Gateway API version, network and current ledger state.
      tags:
        - Status
      responses:
        "200":
          description: The Network
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GatewayInformationResponse"

  #
  # /transaction/* Requests & Responses
  #

  "/transaction/construction":
    post:
      operationId: TransactionConstruction
      summary: TBD
      description: |
        TBD
      tags:
        - Transaction
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionConstructionResponse"
  "/transaction/recent":
    post:
      operationId: TransactionRecent
      summary: Get Recent Transactions
      description: |
        Returns user-initiated transactions which have been succesfully committed to the ledger.
        The transactions are returned in a paginated format, ordered by most recent.
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRecentRequest"
      responses:
        "200":
          description: A page of the most recent transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionRecentResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  "/transaction/preview":
    post:
      operationId: TransactionPreview
      summary: Preview Transaction
      description: |
        Previews transaction against the network.
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Successful Preview
          content:
            application/json:
              schema:
                type: object
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  "/transaction/submit":
    post:
      operationId: TransactionSubmit
      summary: Submit Transaction
      description: |
        Submits a signed transaction payload to the network.
        The transaction identifier from finalize or submit can then be used to track the transaction status.
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionSubmitRequest"
      responses:
        "200":
          description: Successful Submission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionSubmitResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  "/transaction/committed-details":
    post:
      operationId: TransactionCommittedDetails
      summary: Transaction Committed Details
      description: |
        Returns the status and contents of the transaction with the given transaction identifier. Transaction identifiers which aren't recognised as either belonging to a committed transaction or a transaction submitted through this Network Gateway may return a `TransactionNotFoundError`. Transaction identifiers relating to failed transactions will, after a delay, also be reported as a `TransactionNotFoundError`.
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionCommittedDetailsRequest"
      responses:
        "200":
          description: Transaction Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionCommittedDetailsResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  "/transaction/status":
    post:
      operationId: TransactionStatus
      summary: Transaction Status
      description: |
        TBD
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionStatusRequest"
      responses:
        "200":
          description: Transaction Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionStatusResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"

  #
  # /gateway/* Requests & Responses
  #

  /entity/overview:
    post:
      operationId: EntityOverview
      summary: Returns incomplete collection of basic information for a given collection of entities.
      description: |
        TBD
      tags:
        - Entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityOverviewRequest"
      responses:
        "200":
          description: Entity Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityOverviewResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  /entity/details:
    post:
      operationId: EntityDetails
      summary: Returns detailed information for a given entity.
      description: |
        TBD
      tags:
        - Entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityDetailsRequest"
      responses:
        "200":
          description: Entity Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityDetailsResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  /entity/resources:
    post:
      operationId: EntityResources
      summary: Returns incomplete collection of fungible and non-fungible resources associated with a given entity.
      description: |
        TBD
      tags:
        - Entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityResourcesRequest"
      responses:
        "200":
          description: Entity Resources
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityResourcesResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  /entity/metadata:
    post:
      operationId: EntityMetadata
      summary: Iterates through all metadata associated with a given entity.
      description: |
        TBD
      tags:
        - Entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityMetadataRequest"
      responses:
        "200":
          description: Entity Metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityMetadataResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  /entity/fungibles:
    post:
      operationId: EntityFungibles
      summary: Iterates through all fungible resources associated with a given entity.
      description: |
        TBD
      tags:
        - Entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityFungiblesRequest"
      responses:
        "200":
          description: Entity Fungibles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityFungiblesResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  /entity/non-fungibles:
    post:
      operationId: EntityNonFungibles
      summary: Iterates through all non-fungible resources associated with a given entity.
      description: |
        TBD
      tags:
        - Entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityNonFungiblesRequest"
      responses:
        "200":
          description: Entity Non-Fungibles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNonFungiblesResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  /entity/non-fungible/ids:
    post:
      operationId: EntityNonFungibleIds
      summary: Iterates through all non-fungible ids associated with a given non-fungible resource of a given entity.
      description: |
        TBD
      tags:
        - Entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityNonFungibleIdsRequest"
      responses:
        "200":
          description: Entity Non-Fungibles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityNonFungibleIdsResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"

  #
  # /non-fungible/* Requests & Responses
  #

  /non-fungible/ids:
    post:
      operationId: NonFungibleIds
      summary: Iterates through all non-fungible ids of a given non-fungible resource.
      description: |
        TBD
      tags:
        - Non-Fungible
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NonFungibleIdsRequest"
      responses:
        "200":
          description: Non-Fungible Ids
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NonFungibleIdsResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"
  /non-fungible/data:
    post:
      operationId: NonFungibleData
      summary: Returns data associated with a given non-fungible id.
      description: |
        TBD
      tags:
        - Non-Fungible
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NonFungibleDataRequest"
      responses:
        "200":
          description: Non-Fungible Data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NonFungibleDataResponse"
        "4XX":
          $ref: "#/components/responses/ErrorResponse"

components:
  responses:
    ErrorResponse:
      description: Client-originated request error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  schemas:

    #
    # Aliases
    #

    EntityAddress:
      type: string
      description: The Bech32m-encoded human readable version of the entity's global address.
    ComponentAddress:
      type: string
      description: The Bech32m-encoded human readable version of the component (normal, account, system) global address.
    ResourceAddress:
      type: string
      description: The Bech32m-encoded human readable version of the resource (fungible, non-fungible) global address.

    BigDecimal:
      type: string
      description: The string-encoded decimal representing the amount

    #
    # Generic Types
    #

    LedgerState:
      description: |
        The ledger state against which the response was generated. Can be used to detect if the Network Gateway is returning up-to-date information.
      type: object
      required:
        - network
        - state_version
        - timestamp
        - epoch
        - round
      properties:
        network:
          description: The name of the network against which the request is made.
          type: string
        state_version:
          description: The state version of the ledger. Each transaction increments the state version by 1.
          type: integer
          format: int64
        timestamp:
          description: |
            The round timestamp of the consensus round when this transaction was committed to ledger. This is not guaranteed to be strictly increasing, as it is computed as an average across the validator set. If this is significantly behind the current timestamp, the Network Gateway is likely reporting out-dated information, or the network has stalled.
          type: string
        epoch:
          description: The epoch number of the ledger at this state version.
          type: integer
          format: int64
        round:
          description: The consensus round in the epoch that this state version was committed in.
          type: integer
          format: int64
    PartialLedgerStateIdentifier:
      description: Allows a client to request a response referencing an earlier (`at_*` properties) or later (`from_*` properties) ledger state.
      type: object
      nullable: true
      properties:
        state_version:
          description: If the version is provided, the latest ledger state <= the given version is returned.
          nullable: true
          type: integer
          format: int64
        timestamp:
          description: If a timestamp is provided, the latest ledger state <= the given timestamp is returned.
          nullable: true
          type: string
          format: date-time
        epoch:
          description: If an epoch is provided, the ledger state at the given epoch <= the given round (else round 0) is returned.
          nullable: true
          type: integer
          format: int64
        round:
          nullable: true
          type: integer
          format: int64

    EntityMetadataCollection:
      allOf:
        - $ref: "#/components/schemas/ResultSetCursorMixin"
        - type: object
          required:
            - items
          properties:
            items:
              description: TBD
              type: array
              items:
                $ref: "#/components/schemas/EntityMetadataItem"
    EntityMetadataItem:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
        value:
          type: string

    FungibleResourcesCollection:
      allOf:
        - $ref: "#/components/schemas/ResultSetCursorMixin"
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/FungibleResourcesCollectionItem"
    FungibleResourcesCollectionItem:
      type: object
      required:
        - address
        - amount
      properties:
        address:
          $ref: "#/components/schemas/ResourceAddress"
        amount:
          $ref: "#/components/schemas/TokenAmount"
    NonFungibleResourcesCollection:
      allOf:
        - $ref: "#/components/schemas/ResultSetCursorMixin"
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/NonFungibleResourcesCollectionItem"
    NonFungibleResourcesCollectionItem:
      type: object
      required:
        - address
        - amount
      properties:
        address:
          $ref: "#/components/schemas/ResourceAddress"
        amount:
          type: integer
          format: int64
    NonFungibleIdsCollection:
      allOf:
        - $ref: "#/components/schemas/ResultSetCursorMixin"
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/NonFungibleIdsCollectionItem"
    NonFungibleIdsCollectionItem:
      type: object
      required:
        - id_hex
      properties:
        id_hex:
          type: string

    CommittedTransactionInfo:
      type: object
      required:
        - state_version
        - transaction_status
        - payload_hash_hex
        - intent_hash_hex
      properties:
        state_version:
          nullable: true
          type: integer
          format: int64
        transaction_status:
          $ref: "#/components/schemas/TransactionStatus"
        payload_hash_hex:
          type: string
        intent_hash_hex:
          type: string
        fee_paid:
          $ref: "#/components/schemas/TokenAmount"
        confirmed_at:
          nullable: true
          type: string
          format: date-time
        error_message:
          type: string
          nullable: true

    TransactionStatus:
      type: string
      enum:
        - unknown
        - committed_success
        - committed_failure
        - pending
        - rejected

    TokenAmount:
      type: object
      required:
        - value
        - token_identifier
      properties:
        value:
          $ref: "#/components/schemas/BigDecimal"
        address:
          $ref: "#/components/schemas/ResourceAddress"

    #
    # Mixins
    #

    LedgerStateMixin:
      type: object
      required:
        - ledger_state
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"

    ResultSetCursorMixin:
      type: object
      properties:
        total_count:
          description: TBD (make it nullable when we're dealing with unknown result set sizes?)
          type: integer
          format: int64
          nullable: true
        previous_cursor:
          description: TBD (maybe we should use HATEOAS-like permalinks?)
          type: string
          nullable: true
        next_cursor:
          description: TBD (maybe we should use HATEOAS-like permalinks?)
          type: string
          nullable: true

    #
    # /gateway/* Request & Response Types
    #

    GatewayInformationResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - known_target
            - release_info
            - well_known_addresses
          properties:
            known_target:
              $ref: "#/components/schemas/GatewayInfoResponseKnownTarget"
            release_info:
              $ref: "#/components/schemas/GatewayInfoResponseReleaseInfo"
            well_known_addresses:
              type: object
              required:
                - account_package
                - faucet
                - ecdsa_secp256k1
                - eddsa_ed25519
                - xrd
              properties:
                account_package:
                  $ref: "#/components/schemas/EntityAddress"
                faucet:
                  $ref: "#/components/schemas/ComponentAddress"
                ecdsa_secp256k1:
                  $ref: "#/components/schemas/ResourceAddress"
                eddsa_ed25519:
                  $ref: "#/components/schemas/ResourceAddress"
                xrd:
                  $ref: "#/components/schemas/ResourceAddress"
    GatewayInfoResponseKnownTarget:
      type: object
      required:
        - state_version
      properties:
        state_version:
          description: |
            The latest-seen state version of the tip of the network's ledger. If this is significantly ahead of the current LedgerState version, the Network Gateway is possibly behind and may be reporting outdated information.
          type: integer
          format: int64
    GatewayInfoResponseReleaseInfo:
      type: object
      required:
        - release_version
        - open_api_schema_version
      properties:
        release_version:
          description: The release that is currently deployed to the Gateway API.
          type: string
        open_api_schema_version:
          description: The Open API Schema version that was used to generate the API models.
          type: string

    #
    # /transaction/* Request & Response Types
    #

    TransactionConstructionResponse:
      allOf:
        - type: object
        - $ref: "#/components/schemas/LedgerStateMixin"
    TransactionRecentRequest:
      type: object
      properties:
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        from_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        cursor:
          description: This cursor allows forward pagination, by providing the cursor from the previous request.
          type: string
          nullable: true
        limit:
          description: The page size requested.
          type: integer
          nullable: true
      example:
        limit: 5
    TransactionRecentResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - allOf:
            - $ref: "#/components/schemas/ResultSetCursorMixin"
            - type: object
              required:
                - items
              properties:
                items:
                  description: The page of user transactions.
                  type: array
                  items:
                    $ref: "#/components/schemas/CommittedTransactionInfo"

    TransactionSubmitRequest:
      type: object
      required:
        - notarized_transaction_hex
      properties:
        notarized_transaction_hex:
          description: The notarized transaction payload which can be submitted, hex encoded.
          type: string
    TransactionSubmitResponse:
      type: object
      required:
        - duplicate
      properties:
        duplicate:
          type: boolean
          description: Is true if the transaction is a duplicate of an existing pending transaction.

    TransactionStatusRequest:
      type: object
      required:
        - transaction_identifier
      properties:
        intent_hash_hex:
          type: string
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        intent_hash_hex: "<transaction-intent-hash>"
    TransactionStatusResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - status
            - known_payloads
          properties:
            status:
              $ref: "#/components/schemas/TransactionStatus"
            known_payloads:
              type: array
              items:
                $ref: "#/components/schemas/TransactionStatusResponseKnownPayloadItem"
            error_message:
              type: string
              nullable: true
    TransactionStatusResponseKnownPayloadItem:
      type: object
      required:
        - payload_hash_hex
        - status
      properties:
        payload_hash_hex:
          type: string
        status:
          $ref: "#/components/schemas/TransactionStatus"
        error_message:
          type: string
          nullable: true

    TransactionCommittedDetailsRequest:
      type: object
      required:
        - transaction_identifier
      properties:
        transaction_identifier:
          $ref: "#/components/schemas/TransactionCommittedDetailsRequestIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        transaction_identifier:
          type: payload_hash
          value_hex: "<transaction-payload-hash>"
    TransactionCommittedDetailsRequestIdentifierType:
      type: string
      enum:
        - intent_hash
        - signed_intent_hash
        - payload_hash
    TransactionCommittedDetailsRequestIdentifier:
      type: object
      required:
        - type
        - value_hex
      properties:
        type:
          $ref: "#/components/schemas/TransactionCommittedDetailsRequestIdentifierType"
        value_hex:
          type: string
    TransactionCommittedDetailsResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - transaction
            - details
          properties:
            transaction:
              $ref: "#/components/schemas/CommittedTransactionInfo"
            details:
              $ref: "#/components/schemas/TransactionCommittedDetailsResponseDetails"
    TransactionCommittedDetailsResponseDetails:
      type: object
      required:
        - raw_hex
        - receipt
        - referenced_global_entities
      properties:
        raw_hex:
          description: The raw transaction payload, hex encoded.
          type: string
        receipt:
          type: object
        referenced_global_entities:
          type: array
          items:
            type: string
        message_hex:
          description: The message bytes, hex encoded.
          type: string

    #
    # /entity/* Request & Response Types
    #

    EntityResourcesRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: "#/components/schemas/EntityAddress"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        address: "<component-entity-address>"
    EntityResourcesResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - address
            - fungible_resources
            - non_fungible_resources
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"
            fungible_resources:
              $ref: "#/components/schemas/FungibleResourcesCollection"
            non_fungible_resources:
              $ref: "#/components/schemas/NonFungibleResourcesCollection"

    EntityDetailsRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: "#/components/schemas/EntityAddress"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        address: "<entity-address>"
    EntityDetailsResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - address
            - metadata
            - details
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"
            metadata:
              $ref: "#/components/schemas/EntityMetadataCollection"
            details:
              $ref: "#/components/schemas/EntityDetailsResponseDetails"
    EntityDetailsResponseDetailsType:
      type: string
      enum:
        - fungible_resource
        - non_fungible_resource
        - package
        - component
    EntityDetailsResponseDetails:
      oneOf:
        - $ref: "#/components/schemas/EntityDetailsResponseFungibleResourceDetails"
        - $ref: "#/components/schemas/EntityDetailsResponseNonFungibleResourceDetails"
        - $ref: "#/components/schemas/EntityDetailsResponsePackageDetails"
        - $ref: "#/components/schemas/EntityDetailsResponseComponentDetails"
      discriminator:
        propertyName: discriminator
        mapping:
          # Must match EntityDetailsResponseDetailsType
          fungible_resource: "#/components/schemas/EntityDetailsResponseFungibleResourceDetails"
          non_fungible_resource: "#/components/schemas/EntityDetailsResponseNonFungibleResourceDetails"
          package: "#/components/schemas/EntityDetailsResponsePackageDetails"
          component: "#/components/schemas/EntityDetailsResponseComponentDetails"
    EntityDetailsResponseFungibleResourceDetails:
      type: object
      required:
        - discriminator
        - auth_rules
        - divisibility
        - total_supply
        - total_minted
        - total_burnt
      properties:
        discriminator:
          $ref: "#/components/schemas/EntityDetailsResponseDetailsType"
        auth_rules:
          type: object
        divisibility:
          type: integer
          minimum: 0
        total_supply:
          $ref: "#/components/schemas/TokenAmount"
        total_minted:
          $ref: "#/components/schemas/TokenAmount"
        total_burnt:
          $ref: "#/components/schemas/TokenAmount"
    EntityDetailsResponseNonFungibleResourceDetails:
      type: object
      required:
        - discriminator
        - auth_rules
        - ids
      properties:
        discriminator:
          $ref: "#/components/schemas/EntityDetailsResponseDetailsType"
        auth_rules:
          type: object
        ids:
          $ref: "#/components/schemas/EntityDetailsResponseNonFungibleResourceDetailsIds"
    EntityDetailsResponseNonFungibleResourceDetailsIds:
      allOf:
        - $ref: "#/components/schemas/ResultSetCursorMixin"
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/EntityDetailsResponseNonFungibleResourceDetailsIdsItem"
    EntityDetailsResponseNonFungibleResourceDetailsIdsItem:
      type: object
      required:
        - id
      properties:
        id_hex:
          type: string
        immutable_data_hex:
          type: string
        mutable_data_hex:
          type: string
    EntityDetailsResponsePackageDetails:
      type: object
      required:
        - discriminator
        - code_hex
      properties:
        discriminator:
          $ref: "#/components/schemas/EntityDetailsResponseDetailsType"
        code_hex:
          type: string
    EntityDetailsResponseComponentDetails:
      type: object
      required:
        - discriminator
        - package_address
        - blueprint_name
        - state
        - access_rules_layers
      properties:
        discriminator:
          $ref: "#/components/schemas/EntityDetailsResponseDetailsType"
        package_address:
          $ref: "#/components/schemas/EntityAddress"
        blueprint_name:
          type: string
        state:
          type: object
        access_rules_layers:
          type: object

    EntityOverviewRequest:
      type: object
      required:
        - addresses
      properties:
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/EntityAddress"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        addresses:
          - "<entity-address>"
    EntityOverviewResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - entities
          properties:
            entities:
              type: array
              items:
                $ref: "#/components/schemas/EntityOverviewResponseEntityItem"
    EntityOverviewResponseEntityItem:
       type: object
       required:
         - address
         - metadata
       properties:
         address:
           $ref: "#/components/schemas/EntityAddress"
         metadata:
           $ref: "#/components/schemas/EntityMetadataCollection"

    EntityMetadataRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: "#/components/schemas/EntityAddress"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        cursor:
          description: This cursor allows forward pagination, by providing the cursor from the previous request.
          type: string
          nullable: true
        limit:
          description: The page size requested.
          type: integer
          nullable: true
      example:
        address: "<entity-address>"
    EntityMetadataResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - address
            - metadata
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"
            metadata:
              $ref: "#/components/schemas/EntityMetadataCollection"

    EntityFungiblesRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: "#/components/schemas/EntityAddress"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        cursor:
          description: This cursor allows forward pagination, by providing the cursor from the previous request.
          type: string
          nullable: true
        limit:
          description: The page size requested.
          type: integer
          nullable: true
      example:
        address: "<component-entity-address>"
    EntityFungiblesResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - address
            - fungibles
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"
            fungibles:
              $ref: "#/components/schemas/FungibleResourcesCollection"

    EntityNonFungiblesRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: "#/components/schemas/EntityAddress"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        cursor:
          description: This cursor allows forward pagination, by providing the cursor from the previous request.
          type: string
          nullable: true
        limit:
          description: The page size requested.
          type: integer
          nullable: true
      example:
        address: "<component-entity-address>"
    EntityNonFungiblesResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - address
            - non_fungibles
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"
            non_fungibles:
              $ref: "#/components/schemas/NonFungibleResourcesCollection"

    EntityNonFungibleIdsRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: "#/components/schemas/EntityAddress"
        resource_address:
          $ref: "#/components/schemas/ResourceAddress"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        cursor:
          description: This cursor allows forward pagination, by providing the cursor from the previous request.
          type: string
          nullable: true
        limit:
          description: The page size requested.
          type: integer
          nullable: true
      example:
        address: "<component-entity-address>"
        resource_address: "<non-fungible-resource-entity-address>"
    EntityNonFungibleIdsResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - address
            - resource_address
            - non_fungible_ids
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"
            resource_address:
              $ref: "#/components/schemas/ResourceAddress"
            non_fungible_ids:
              $ref: "#/components/schemas/NonFungibleIdsCollection"

    NonFungibleIdsRequest:
      type: object
      required:
        - address
      properties:
        address:
          $ref: "#/components/schemas/EntityAddress"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        cursor:
          description: This cursor allows forward pagination, by providing the cursor from the previous request.
          type: string
          nullable: true
        limit:
          description: The page size requested.
          type: integer
          nullable: true
      example:
        address: "<non-fungible-entity-address>"
    NonFungibleIdsResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - address
            - non_fungible_ids
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"
            non_fungible_ids:
              $ref: "#/components/schemas/NonFungibleIdsCollection"

    NonFungibleDataRequest:
      type: object
      required:
        - address
        - non_fungible_id_hex
      properties:
        address:
          $ref: "#/components/schemas/EntityAddress"
        non_fungible_id_hex:
          type: string
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        cursor:
          description: This cursor allows forward pagination, by providing the cursor from the previous request.
          type: string
          nullable: true
        limit:
          description: The page size requested.
          type: integer
          nullable: true
      example:
        address: "<non-fungible-entity-address>"
        non_fungible_id_hex: "0a0100000000"
    NonFungibleDataResponse:
      allOf:
        - $ref: "#/components/schemas/LedgerStateMixin"
        - type: object
          required:
            - address
            - non_fungible_id_hex
            - mutable_data_hex
            - immutable_data_hex
          properties:
            address:
              $ref: "#/components/schemas/ResourceAddress"
            non_fungible_id_hex:
              type: string
            mutable_data_hex:
              type: string
            immutable_data_hex:
              type: string

    #
    # Errors
    #

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          description: A human-readable error message.
          type: string
        code:
          description: A numeric code corresponding to the given error type.
          type: integer
        details:
          $ref: "#/components/schemas/GatewayError"
        trace_id:
          description: A unique request identifier to be used when reporting errors, to allow correlation with the Gateway API's error logs.
          type: string

    GatewayError:
      type: object
      required:
        - type
      properties:
        type:
          description: The type of error. Each subtype may have its own additional structured fields.
          type: string
      discriminator:
        propertyName: type
        mapping:
          EntityNotFoundError: "#/components/schemas/EntityNotFoundError"
          InvalidEntityError: "#/components/schemas/InvalidEntityError"

          #
          # TODO Not categorized/cleaned yet
          #
          NotSyncedUpError: "#/components/schemas/NotSyncedUpError"
          InvalidRequestError: "#/components/schemas/InvalidRequestError"
          InvalidTransactionError: "#/components/schemas/InvalidTransactionError"
          TransactionNotFoundError: "#/components/schemas/TransactionNotFoundError"
          InternalServerError: "#/components/schemas/InternalServerError"

    EntityNotFoundError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - address
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"
    InvalidEntityError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - address
          properties:
            address:
              $ref: "#/components/schemas/EntityAddress"

    #
    # TODO Not categorized/cleaned yet
    #
    NotSyncedUpError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - request_type
            - current_sync_delay_seconds
            - max_allowed_sync_delay_seconds
          properties:
            request_type:
              description: The request type that triggered this exception.
              type: string
            current_sync_delay_seconds:
              description: The current delay between the Gateway DB and the network ledger round timestamp.
              type: integer
              format: int64
            max_allowed_sync_delay_seconds:
              description: The maximum allowed delay between the Gateway DB and the network ledger round timestamp for this `request_type`.
              type: integer
              format: int64
    InvalidRequestError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - validation_errors
          properties:
            validation_errors:
              description: One or more validation errors which occurred when validating the request.
              type: array
              items:
                $ref: "#/components/schemas/ValidationErrorsAtPath"
    ValidationErrorsAtPath:
      type: object
      required:
        - path
        - errors
      properties:
        path:
          type: string
        errors:
          type: array
          items:
            type: string
    InternalServerError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - exception
            - cause
          properties:
            exception:
              description: Gives an error type which occurred within the Gateway API when serving the request.
              type: string
            cause:
              description: Gives a human readable message - likely just a trace ID for reporting the error.
              type: string
    InvalidTransactionError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
    TransactionNotFoundError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - transaction_not_found
          properties:
            transaction_not_found:
              $ref: "#/components/schemas/TransactionCommittedDetailsRequestIdenti\
                    fier"


    TokenIdentifier:
      type: object
      required:
        - rri
      properties:
        rri:
          description: The radix resource identifier of the token.
          type: string
