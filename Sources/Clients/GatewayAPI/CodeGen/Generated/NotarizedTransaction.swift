//
// NotarizedTransaction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

// MARK: - NotarizedTransaction
public struct NotarizedTransaction: Codable, Hashable {
	/** The hex-encoded double-SHA256 hash of the notarized transaction payload. Also known as the payload_hash or the notarized_transaction_hash. */
	public private(set) var hash: String
	/** The hex-encoded full notarized transaction payload */
	public private(set) var payloadHex: String
	public private(set) var signedIntent: SignedTransactionIntent
	public private(set) var notarySignature: Signature

	public init(hash: String, payloadHex: String, signedIntent: SignedTransactionIntent, notarySignature: Signature) {
		self.hash = hash
		self.payloadHex = payloadHex
		self.signedIntent = signedIntent
		self.notarySignature = notarySignature
	}

	public enum CodingKeys: String, CodingKey, CaseIterable {
		case hash
		case payloadHex = "payload_hex"
		case signedIntent = "signed_intent"
		case notarySignature = "notary_signature"
	}

	// Encodable protocol methods

	public func encode(to encoder: Encoder) throws {
		var container = encoder.container(keyedBy: CodingKeys.self)
		try container.encode(hash, forKey: .hash)
		try container.encode(payloadHex, forKey: .payloadHex)
		try container.encode(signedIntent, forKey: .signedIntent)
		try container.encode(notarySignature, forKey: .notarySignature)
	}
}
