//
// TransactionSubmitRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.TransactionSubmitRequest")
public typealias TransactionSubmitRequest = GatewayAPI.TransactionSubmitRequest

// MARK: - GatewayAPI.TransactionSubmitRequest
public extension GatewayAPI {
	struct TransactionSubmitRequest: Codable, Hashable {
		/** The notarized transaction payload which can be submitted, hex encoded. */
		public private(set) var notarizedTransaction: String

		public init(notarizedTransaction: String) {
			self.notarizedTransaction = notarizedTransaction
		}

		public enum CodingKeys: String, CodingKey, CaseIterable {
			case notarizedTransaction = "notarized_transaction"
		}

		// Encodable protocol methods

		public func encode(to encoder: Encoder) throws {
			var container = encoder.container(keyedBy: CodingKeys.self)
			try container.encode(notarizedTransaction, forKey: .notarizedTransaction)
		}
	}
}
