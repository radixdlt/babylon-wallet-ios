//
// PublicKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.PublicKey")
public typealias PublicKey = GatewayAPI.PublicKey

extension GatewayAPI {

public enum PublicKey: Codable, JSONEncodable, Hashable {
    case typePublicKeyEcdsaSecp256k1(PublicKeyEcdsaSecp256k1)
    case typePublicKeyEddsaEd25519(PublicKeyEddsaEd25519)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typePublicKeyEcdsaSecp256k1(let value):
            try container.encode(value)
        case .typePublicKeyEddsaEd25519(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(PublicKeyEcdsaSecp256k1.self) {
            self = .typePublicKeyEcdsaSecp256k1(value)
        } else if let value = try? container.decode(PublicKeyEddsaEd25519.self) {
            self = .typePublicKeyEddsaEd25519(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of PublicKey"))
        }
    }
}

}
