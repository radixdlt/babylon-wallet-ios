//
// NonFungibleDataResponseAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.NonFungibleDataResponseAllOf")
public typealias NonFungibleDataResponseAllOf = GatewayAPI.NonFungibleDataResponseAllOf

// MARK: - GatewayAPI.NonFungibleDataResponseAllOf
public extension GatewayAPI {
	struct NonFungibleDataResponseAllOf: Codable, Hashable {
		/** The Bech32m-encoded human readable version of the resource (fungible, non-fungible) global address. */
		public private(set) var address: String
		public private(set) var nonFungibleIdHex: String
		public private(set) var mutableDataHex: String
		public private(set) var immutableDataHex: String

		public init(address: String, nonFungibleIdHex: String, mutableDataHex: String, immutableDataHex: String) {
			self.address = address
			self.nonFungibleIdHex = nonFungibleIdHex
			self.mutableDataHex = mutableDataHex
			self.immutableDataHex = immutableDataHex
		}

		public enum CodingKeys: String, CodingKey, CaseIterable {
			case address
			case nonFungibleIdHex = "non_fungible_id_hex"
			case mutableDataHex = "mutable_data_hex"
			case immutableDataHex = "immutable_data_hex"
		}

		// Encodable protocol methods

		public func encode(to encoder: Encoder) throws {
			var container = encoder.container(keyedBy: CodingKeys.self)
			try container.encode(address, forKey: .address)
			try container.encode(nonFungibleIdHex, forKey: .nonFungibleIdHex)
			try container.encode(mutableDataHex, forKey: .mutableDataHex)
			try container.encode(immutableDataHex, forKey: .immutableDataHex)
		}
	}
}
