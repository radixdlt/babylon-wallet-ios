//
// FungibleResourcesCollectionItemAggregated.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.FungibleResourcesCollectionItemAggregated")
public typealias FungibleResourcesCollectionItemAggregated = GatewayAPI.FungibleResourcesCollectionItemAggregated

extension GatewayAPI {

public enum FungibleResourcesCollectionItemAggregated: Codable, JSONEncodable, Hashable {
    case typeFungibleResourcesCollectionItemGloballyAggregated(FungibleResourcesCollectionItemGloballyAggregated)
    case typeFungibleResourcesCollectionItemVaultAggregated(FungibleResourcesCollectionItemVaultAggregated)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeFungibleResourcesCollectionItemGloballyAggregated(let value):
            try container.encode(value)
        case .typeFungibleResourcesCollectionItemVaultAggregated(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(FungibleResourcesCollectionItemGloballyAggregated.self) {
            self = .typeFungibleResourcesCollectionItemGloballyAggregated(value)
        } else if let value = try? container.decode(FungibleResourcesCollectionItemVaultAggregated.self) {
            self = .typeFungibleResourcesCollectionItemVaultAggregated(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of FungibleResourcesCollectionItemAggregated"))
        }
    }
}

}
