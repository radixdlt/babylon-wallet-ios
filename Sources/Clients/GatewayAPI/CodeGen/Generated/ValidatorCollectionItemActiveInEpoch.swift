//
// ValidatorCollectionItemActiveInEpoch.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.ValidatorCollectionItemActiveInEpoch")
public typealias ValidatorCollectionItemActiveInEpoch = GatewayAPI.ValidatorCollectionItemActiveInEpoch

// MARK: - GatewayAPI.ValidatorCollectionItemActiveInEpoch
extension GatewayAPI {
	public struct ValidatorCollectionItemActiveInEpoch: Codable, Hashable {
		public private(set) var stake: ValidatorCollectionItemActiveInEpochStake
		public private(set) var key: PublicKey
		public private(set) var metadata: EntityMetadataCollection?

		public init(stake: ValidatorCollectionItemActiveInEpochStake, key: PublicKey, metadata: EntityMetadataCollection? = nil) {
			self.stake = stake
			self.key = key
			self.metadata = metadata
		}

		public enum CodingKeys: String, CodingKey, CaseIterable {
			case stake
			case key
			case metadata
		}

		// Encodable protocol methods

		public func encode(to encoder: Encoder) throws {
			var container = encoder.container(keyedBy: CodingKeys.self)
			try container.encode(stake, forKey: .stake)
			try container.encode(key, forKey: .key)
			try container.encodeIfPresent(metadata, forKey: .metadata)
		}
	}
}
