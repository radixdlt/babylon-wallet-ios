//
// EntityFungiblesResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import ClientPrelude
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.EntityFungiblesResponse")
public typealias EntityFungiblesResponse = GatewayAPI.EntityFungiblesResponse

// MARK: - GatewayAPI.EntityFungiblesResponse
extension GatewayAPI {
	public struct EntityFungiblesResponse: Codable, Hashable {
		public private(set) var ledgerState: LedgerState
		/** The Bech32m-encoded human readable version of the entity's global address. */
		public private(set) var address: String
		public private(set) var fungibles: FungibleResourcesCollection

		public init(ledgerState: LedgerState, address: String, fungibles: FungibleResourcesCollection) {
			self.ledgerState = ledgerState
			self.address = address
			self.fungibles = fungibles
		}

		public enum CodingKeys: String, CodingKey, CaseIterable {
			case ledgerState = "ledger_state"
			case address
			case fungibles
		}

		// Encodable protocol methods

		public func encode(to encoder: Encoder) throws {
			var container = encoder.container(keyedBy: CodingKeys.self)
			try container.encode(ledgerState, forKey: .ledgerState)
			try container.encode(address, forKey: .address)
			try container.encode(fungibles, forKey: .fungibles)
		}
	}
}
