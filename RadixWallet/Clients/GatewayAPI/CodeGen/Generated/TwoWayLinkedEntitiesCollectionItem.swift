//
// TwoWayLinkedEntitiesCollectionItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.TwoWayLinkedEntitiesCollectionItem")
typealias TwoWayLinkedEntitiesCollectionItem = GatewayAPI.TwoWayLinkedEntitiesCollectionItem

extension GatewayAPI {

struct TwoWayLinkedEntitiesCollectionItem: Codable, Hashable {

    /** Bech32m-encoded human readable version of the address. */
    private(set) var entityAddress: String

    init(entityAddress: String) {
        self.entityAddress = entityAddress
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case entityAddress = "entity_address"
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(entityAddress, forKey: .entityAddress)
    }
}

}
