//
// PackageCodeCollectionItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.PackageCodeCollectionItem")
typealias PackageCodeCollectionItem = GatewayAPI.PackageCodeCollectionItem

extension GatewayAPI {

struct PackageCodeCollectionItem: Codable, Hashable {

    private(set) var vmType: PackageVmType
    /** Hex-encoded binary blob. */
    private(set) var codeHashHex: String
    /** Hex-encoded binary blob. */
    private(set) var codeHex: String

    init(vmType: PackageVmType, codeHashHex: String, codeHex: String) {
        self.vmType = vmType
        self.codeHashHex = codeHashHex
        self.codeHex = codeHex
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case vmType = "vm_type"
        case codeHashHex = "code_hash_hex"
        case codeHex = "code_hex"
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(vmType, forKey: .vmType)
        try container.encode(codeHashHex, forKey: .codeHashHex)
        try container.encode(codeHex, forKey: .codeHex)
    }
}

}
