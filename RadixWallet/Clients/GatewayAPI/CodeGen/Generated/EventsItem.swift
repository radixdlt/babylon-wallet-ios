//
// EventsItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.EventsItem")
typealias EventsItem = GatewayAPI.EventsItem

extension GatewayAPI {

struct EventsItem: Codable, Hashable {

    private(set) var name: String
    /** This type is defined in the Core API as `EventEmitterIdentifier`. See the Core API documentation for more details.  */
    private(set) var emitter: AnyCodable
    private(set) var data: ProgrammaticScryptoSborValue

    init(name: String, emitter: AnyCodable, data: ProgrammaticScryptoSborValue) {
        self.name = name
        self.emitter = emitter
        self.data = data
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case emitter
        case data
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(emitter, forKey: .emitter)
        try container.encode(data, forKey: .data)
    }
}

}
