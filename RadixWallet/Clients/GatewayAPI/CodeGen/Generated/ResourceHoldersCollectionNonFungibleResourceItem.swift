//
// ResourceHoldersCollectionNonFungibleResourceItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.ResourceHoldersCollectionNonFungibleResourceItem")
typealias ResourceHoldersCollectionNonFungibleResourceItem = GatewayAPI.ResourceHoldersCollectionNonFungibleResourceItem

extension GatewayAPI {

struct ResourceHoldersCollectionNonFungibleResourceItem: Codable, Hashable {

    private(set) var type: ResourceHoldersResourceType
    /** Bech32m-encoded human readable version of the address. */
    private(set) var holderAddress: String
    private(set) var lastUpdatedAtStateVersion: Int64
    private(set) var nonFungibleIdsCount: Int64

    init(type: ResourceHoldersResourceType, holderAddress: String, lastUpdatedAtStateVersion: Int64, nonFungibleIdsCount: Int64) {
        self.type = type
        self.holderAddress = holderAddress
        self.lastUpdatedAtStateVersion = lastUpdatedAtStateVersion
        self.nonFungibleIdsCount = nonFungibleIdsCount
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case holderAddress = "holder_address"
        case lastUpdatedAtStateVersion = "last_updated_at_state_version"
        case nonFungibleIdsCount = "non_fungible_ids_count"
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(holderAddress, forKey: .holderAddress)
        try container.encode(lastUpdatedAtStateVersion, forKey: .lastUpdatedAtStateVersion)
        try container.encode(nonFungibleIdsCount, forKey: .nonFungibleIdsCount)
    }
}

}
