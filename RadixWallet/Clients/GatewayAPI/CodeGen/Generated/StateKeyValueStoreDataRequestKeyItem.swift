//
// StateKeyValueStoreDataRequestKeyItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.StateKeyValueStoreDataRequestKeyItem")
typealias StateKeyValueStoreDataRequestKeyItem = GatewayAPI.StateKeyValueStoreDataRequestKeyItem

extension GatewayAPI {

/** Provide either &#x60;key_hex&#x60; or &#x60;key_json&#x60;. If both are provided, &#x60;key_hex&#x60; is used and &#x60;key_json&#x60; is ignored. */
struct StateKeyValueStoreDataRequestKeyItem: Codable, Hashable {

    /** Hex-encoded binary blob. */
    private(set) var keyHex: String?
    private(set) var keyJson: ProgrammaticScryptoSborValue?

    init(keyHex: String? = nil, keyJson: ProgrammaticScryptoSborValue? = nil) {
        self.keyHex = keyHex
        self.keyJson = keyJson
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case keyHex = "key_hex"
        case keyJson = "key_json"
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(keyHex, forKey: .keyHex)
        try container.encodeIfPresent(keyJson, forKey: .keyJson)
    }
}

}
