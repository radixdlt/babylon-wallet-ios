//
// AccountAuthorizedDepositorsResourceBadge.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.AccountAuthorizedDepositorsResourceBadge")
typealias AccountAuthorizedDepositorsResourceBadge = GatewayAPI.AccountAuthorizedDepositorsResourceBadge

extension GatewayAPI {

struct AccountAuthorizedDepositorsResourceBadge: Codable, Hashable {

    private(set) var badgeType: AccountAuthorizedDepositorBadgeType
    /** Bech32m-encoded human readable version of the address. */
    private(set) var resourceAddress: String
    /** The most recent state version underlying object was modified at. */
    private(set) var lastUpdatedAtStateVersion: Int64

    init(badgeType: AccountAuthorizedDepositorBadgeType, resourceAddress: String, lastUpdatedAtStateVersion: Int64) {
        self.badgeType = badgeType
        self.resourceAddress = resourceAddress
        self.lastUpdatedAtStateVersion = lastUpdatedAtStateVersion
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case badgeType = "badge_type"
        case resourceAddress = "resource_address"
        case lastUpdatedAtStateVersion = "last_updated_at_state_version"
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(badgeType, forKey: .badgeType)
        try container.encode(resourceAddress, forKey: .resourceAddress)
        try container.encode(lastUpdatedAtStateVersion, forKey: .lastUpdatedAtStateVersion)
    }
}

}
