//
// TransactionStatusResponseKnownPayloadItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.TransactionStatusResponseKnownPayloadItem")
public typealias TransactionStatusResponseKnownPayloadItem = GatewayAPI.TransactionStatusResponseKnownPayloadItem

extension GatewayAPI {

public struct TransactionStatusResponseKnownPayloadItem: Codable, Hashable {

    /** Bech32m-encoded hash. */
    public private(set) var payloadHash: String
    public private(set) var status: TransactionStatus
    public private(set) var errorMessage: String?

    public init(payloadHash: String, status: TransactionStatus, errorMessage: String? = nil) {
        self.payloadHash = payloadHash
        self.status = status
        self.errorMessage = errorMessage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case payloadHash = "payload_hash"
        case status
        case errorMessage = "error_message"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(payloadHash, forKey: .payloadHash)
        try container.encode(status, forKey: .status)
        try container.encodeIfPresent(errorMessage, forKey: .errorMessage)
    }
}

}
