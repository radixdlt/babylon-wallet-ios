//
// NativeResourceOneResourcePoolUnitValue.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.NativeResourceOneResourcePoolUnitValue")
typealias NativeResourceOneResourcePoolUnitValue = GatewayAPI.NativeResourceOneResourcePoolUnitValue

extension GatewayAPI {

struct NativeResourceOneResourcePoolUnitValue: Codable, Hashable {

    private(set) var kind: NativeResourceKind
    /** Bech32m-encoded human readable version of the address. */
    private(set) var poolAddress: String
    private(set) var redemptionResourceCount: Int
    private(set) var unitRedemptionValue: [NativeResourceRedemptionValueItem]

    init(kind: NativeResourceKind, poolAddress: String, redemptionResourceCount: Int, unitRedemptionValue: [NativeResourceRedemptionValueItem]) {
        self.kind = kind
        self.poolAddress = poolAddress
        self.redemptionResourceCount = redemptionResourceCount
        self.unitRedemptionValue = unitRedemptionValue
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case kind
        case poolAddress = "pool_address"
        case redemptionResourceCount = "redemption_resource_count"
        case unitRedemptionValue = "unit_redemption_value"
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(kind, forKey: .kind)
        try container.encode(poolAddress, forKey: .poolAddress)
        try container.encode(redemptionResourceCount, forKey: .redemptionResourceCount)
        try container.encode(unitRedemptionValue, forKey: .unitRedemptionValue)
    }
}

}
