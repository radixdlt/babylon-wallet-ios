//
// ValidatorCollectionItemEffectiveFeeFactorPending.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.ValidatorCollectionItemEffectiveFeeFactorPending")
typealias ValidatorCollectionItemEffectiveFeeFactorPending = GatewayAPI.ValidatorCollectionItemEffectiveFeeFactorPending

extension GatewayAPI {

struct ValidatorCollectionItemEffectiveFeeFactorPending: Codable, Hashable {

    /** String-encoded decimal representing the amount of a related fungible resource. */
    private(set) var feeFactor: String
    private(set) var effectiveAtEpoch: Int64

    init(feeFactor: String, effectiveAtEpoch: Int64) {
        self.feeFactor = feeFactor
        self.effectiveAtEpoch = effectiveAtEpoch
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case feeFactor = "fee_factor"
        case effectiveAtEpoch = "effective_at_epoch"
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(feeFactor, forKey: .feeFactor)
        try container.encode(effectiveAtEpoch, forKey: .effectiveAtEpoch)
    }
}

}
