//
// MetadataU8ArrayValue.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "GatewayAPI.MetadataU8ArrayValue")
typealias MetadataU8ArrayValue = GatewayAPI.MetadataU8ArrayValue

extension GatewayAPI {

struct MetadataU8ArrayValue: Codable, Hashable {

    private(set) var type: MetadataValueType
    private(set) var valueHex: String

    init(type: MetadataValueType, valueHex: String) {
        self.type = type
        self.valueHex = valueHex
    }

    enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case valueHex = "value_hex"
    }

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(valueHex, forKey: .valueHex)
    }
}

}
